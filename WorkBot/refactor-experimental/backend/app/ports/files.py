from __future__ import annotations
from pathlib import Path
from typing import Protocol, List, Optional

class FilePort(Protocol):
    def get_directory(self) -> Path: ...
    def get_file_path(self, obj, format: str) -> Path: ...
    def parse_filename(self, filename: str) -> dict: ...
    def list_files(self, pattern: str = "*") -> list[Path]: ...
    def read_from_path(self, path: Path): ...
    def save(self, obj, format: str = "auto") -> Path: ...
    def remove(self, path: Path) -> None: ...
    def move(self, src: Path, dest: Path, overwrite: bool = False) -> None: ...

class OrderFilePort(FilePort, Protocol):
    def get_order_files(
        self,
        stores: List[str],
        vendors: List[str],
        formats: Optional[List[str]] = None,
    ) -> List[Path]: ...

